name: e2e

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DATABASE_URL_NEWS: "postgresql://testuser:testpw@localhost:5432/newsdb"
  
jobs:

  build:

    runs-on: ubuntu-22.04

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpw
          POSTGRES_DB: newsdb
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name myapp_db
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        volumes:
          # copy sql script to create tables
          - ${{ github.workspace }}/sql:/docker-entrypoint-initdb.d
          
    steps:
    - uses: actions/checkout@v3
    - name: Populate db
    - run: docker exec myapp_db bash -c psql -d "dbname='newsdb' user='testuser' password='testpw' host='localhost'" -f /docker-entrypoint-initdb.d/create_tables.sql
    - name: Sync db with backend
      working-directory: ./server
      run: npx prisma db push
    - name: Cypress run
      uses: cypress-io/github-action@v5
      with:
        start: |
          yarn --cwd ./server/ dev
          yarn start
        wait-on: 'http://localhost:4000, http://localhost:3000'
    - name: Save artifacts
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-screenshots
        path: cypress/screenshots
    # Test run video was always captured, so this action uses "always()" condition
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: cypress-videos
        path: cypress/videos

